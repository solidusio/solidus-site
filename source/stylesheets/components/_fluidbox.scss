// Variable
$transition-duration: .5s;
$overlay-bg-color: rgba(255,255,255,.85);
$animation-bg-color: $overlay-bg-color;

// Mixins
@mixin prefix($property, $value, $prefixes: ()) {
  @each $prefix in $prefixes {
    #{'-' + $prefix + '-' + $property}: $value;
  }

  // Output standard non-prefixed declaration
  #{$property}: $value;
}

// Animation
@include keyframes(fluidboxLoading) {
  0% {
    @include transform(translate(-50%, -50%) rotateX(0) rotateY(0));
  }
  50% {
    @include transform(translate(-50%, -50%) rotateX(-180deg) rotateY(0));
  }
  100% {
    @include transform(translate(-50%, -50%) rotateX(-180deg) rotateY(-180deg));
  }
}

// Rules
.fluidbox {
  outline: none;
}

.fluidbox__overlay {
  background-color: $overlay-bg-color;
  cursor: pointer;
  cursor: zoom-out;
  opacity: 0;
  pointer-events: none;
  @include position(fixed, 0);
  /* Transition time for overlay is halved to ensure that flickering doesn't happen */
  transition: all $transition-duration ease-in-out;

  .fluidbox--opened & {
    pointer-events: auto;
  }
}

.fluidbox__wrap {
  background-position: center center;
  background-size: cover;
  margin: 0 auto;
  position: relative;
  transition: all $transition-duration ease-in-out;
}

.fluidbox__thumb {
  transition: opacity 0s ease-in-out 0s;

  /* To prevent flickering, we delay the showing of the image */
  .fluidbox--closed & {
    transition: opacity 0s ease-in-out 0s;
  }
}

.fluidbox__ghost {
  position: absolute;
  background: transparent center center / 100% 100% no-repeat;
  @include transition-property(opacity, transform);
  @include transition-duration(0s, $transition-duration);
  @include transition-delay(0s);

  .fluidbox--opened & {
    cursor: pointer;
    cursor: zoom-out;
  }

  .fluidbox--closed & {
    transition-delay: $transition-duration, 0s;
  }
}

.fluidbox__loader {
  @include prefix(perspective, 200px, webkit);
  opacity: 0;
  pointer-events: none;
  @include position(absolute, 0);

  &::before {
    /* You can replace this with any color you want, or even a loading gif if desired */
    background-color: $animation-bg-color;
    content: '';
    transform-style: preserve-3d;
    @include position(absolute, 50% null null 50%);
    width: 20%;
    padding-bottom: 20%;
    @include transform(translate(-50%, -50%));
    @include transition(transform $transition-duration 0s);
  }
}

.fluidbox--loading .fluidbox__loader {
  opacity: 1;
  @include transition(opacity $transition-duration ease-in-out $transition-duration);

  &::before {
    @include animation(fluidboxLoading 1s 0s infinite ease-in-out forwards);
  }
}
